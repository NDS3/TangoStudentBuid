{"version":3,"sources":["serviceWorker.ts","components/ui/Button/styles.ts","components/ui/Button/index.tsx","components/ui/Input/styles.ts","components/ui/Input/index.tsx","components/ui/Carousel/styles.ts","components/ui/Carousel/index.tsx","hooks/useWindowSize.ts","components/ui/PageProgress/styles.ts","components/ui/PageProgress/index.tsx","components/ui/Dialog/styles.ts","components/ui/Dialog/Dialog.tsx","components/ui/DialogInfo/styles.ts","components/ui/DialogInfo/DialogInfo.tsx","store/modules/lessonAnnounces/reducer.ts","store/modules/lessonAnnounces/selectors.ts","externalAPI/index.ts","externalAPI/announces/lessons.ts","store/modules/lessonAnnounces/actions.ts","store/modules/studentInfo/reducer.ts","store/modules/studentInfo/selectors.ts","externalAPI/studentInfo/index.ts","store/modules/studentInfo/actions.ts","store/modules/auth/reducer.ts","store/modules/auth/selectors.ts","externalAPI/auth/login.ts","store/modules/auth/actions.ts","store/modules/eventAnnounces/reducer.ts","store/modules/eventAnnounces/selectors.ts","externalAPI/announces/events.ts","store/modules/eventAnnounces/actions.ts","store/modules/rootReducer.ts","components/announces/lessons/Slide/styles.ts","components/announces/lessons/Slide/Slide.tsx","components/announces/notAnnounces/styles.ts","components/announces/notAnnounces/NotAnnounces.tsx","components/announces/lessons/Lessons.tsx","components/announces/events/Slide/styles.ts","components/announces/events/Slide/Slide.tsx","components/announces/events/Events.tsx","pages/main/styles.ts","pages/main/Main.tsx","components/navigation/header/styles.ts","components/navigation/header/Header.tsx","components/auth/form/styles.ts","components/auth/form/Form.tsx","components/tickets/Slide/styles.ts","components/tickets/Slide/Slide.tsx","components/tickets/Points/styles.ts","components/tickets/Points/Points.tsx","components/tickets/Ticket.tsx","pages/index.tsx","index.tsx","store/index.ts"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","root","props","fontFamily","borderRadius","textAlign","border","color","backgroundColor","cursor","getColors","size","width","height","lineHeight","getSize","Button","text","onClick","classes","className","borderColor","Input","value","setValue","placeholder","type","FormControl","variant","OutlinedInput","onChange","event","target","name","overflow","opacity","top","right","left","fullWidth","chunkArray","arr","map","item","reduce","acc","_","i","slice","CustomCarousel","slides","SlideComponent","breakpoints","useState","innerWidth","innerHeight","setSize","timer","useRef","useLayoutEffect","updateSize","current","setTimeout","addEventListener","clearTimeout","removeEventListener","useWindowSize","key","setKey","start","setStart","chunkedBanners","useMemo","result","getGridSize","fullHeightHover","indicators","navButtonsAlwaysVisible","autoPlay","startAt","index","active","prev","slide","Grid","spacing","direction","justify","alignItems","container","Math","random","sm","display","justifyContent","spinner","PageProgress","CircularProgress","wrapper","background","boxShadow","padding","title","fontWeight","fontSize","marginBottom","Dialog","open","setOpen","maxWidth","onClose","DialogContent","Box","ml","DialogInfo","initialState","list","error","loading","authReducer","state","action","payload","serverHost","getLessons","a","axios","get","headers","response","data","setLessonAnnouncesLoading","setLessonAnnouncesError","points","getStudentInfo","setPoints","setTicketsLoading","setTicketsError","info","token","localStorage","getItem","login","bar_code","password","post","api_token","setAuthInfo","setAuthLoading","getEvents","setEventAnnouncesLoading","setEventAnnouncesError","rootReducer","combineReducers","studentInfo","auth","lessonAnnounces","eventAnnounces","useSelector","_useSelector","position","extraInfoButton","date","time","address","paddingLeft","Slide","start_date","end_date","extra_info","openDialog","setOpenDialog","src","alt","dateString","format","Date","weekDay","locale","ru","charAt","toUpperCase","substring","getDate","finish","startArray","split","finishArray","getTime","noEventsWrapper","paddingTop","paddingBottom","noEventsText","marginTop","NotAnnounces","carouselBreakpoints","0","786","1100","Lessons","dispatch","useDispatch","useEffect","lessons","alert","message","length","Carousel","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","image","end","day","getFormattedDate","Events","events","footer","Main","Header","xs","defaults","common","clear","img","Auth","setLogin","setPassword","md","_login","setItem","upDot","downDot","bottom","lessonsLeft","lessonsCount","ticket","ticket_end_date","lessons_count","ticketCount","lessons_left","getColor","parseISO","label","Points","count","1530","Tickets","_getStudentInfo","tickets","mb","mt","App","Ticket","path","to","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.3f032d12.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Theme } from \"@material-ui/core\";\r\n\r\nexport interface StyleProps {\r\n  color: \"blue\" | \"dark\" | \"white\";\r\n  size: \"small\" | \"medium\";\r\n}\r\n\r\nconst getSize = (size: string) => {\r\n  switch (size) {\r\n    case \"small\":\r\n      return {\r\n        width: 94,\r\n        height: 36,\r\n        lineHeight: \"36px\",\r\n      };\r\n    case \"medium\":\r\n      return {\r\n        width: 140,\r\n        height: 52,\r\n        lineHeight: \"52px\",\r\n      };\r\n    default:\r\n      return {};\r\n  }\r\n};\r\n\r\nconst getColors = (color: string) => {\r\n  switch (color) {\r\n    case \"blue\":\r\n      return {\r\n        color: \"white\",\r\n        backgroundColor: \"#1CA8F3\",\r\n        \"&:hover\": {\r\n          cursor: \"pointer\",\r\n          backgroundColor: \"#37B9FF\",\r\n        },\r\n      };\r\n    case \"dark\":\r\n      return {\r\n        color: \"#7A79A5\",\r\n        backgroundColor: \"#333253\",\r\n        border: \"1px solid #7A79A5\",\r\n        \"&:hover\": {\r\n          cursor: \"pointer\",\r\n          backgroundColor: \"#1CA8F3\",\r\n          color: \"white\",\r\n        },\r\n      };\r\n    case \"white\":\r\n      return {\r\n        color: \"#1CA8F3\",\r\n        backgroundColor: \"transparent\",\r\n        \"&:hover\": {\r\n          cursor: \"pointer\",\r\n          color: \"#37B9FF\",\r\n        },\r\n      };\r\n    default:\r\n      return {};\r\n  }\r\n};\r\n\r\nexport const useStyles = makeStyles<Theme, StyleProps>((theme) => ({\r\n  root: (props) => ({\r\n    fontFamily: \"Roboto\",\r\n    borderRadius: 16,\r\n    textAlign: \"center\",\r\n    border: \"none\",\r\n    ...getColors(props.color),\r\n    ...getSize(props.size),\r\n  }),\r\n}));\r\n","//Core\r\nimport React from \"react\";\r\n//Styles\r\nimport { useStyles } from \"./styles\";\r\n\r\ninterface IProps {\r\n  size: \"small\" | \"medium\";\r\n  color: \"blue\" | \"dark\" | \"white\";\r\n  text: string;\r\n  onClick: () => void;\r\n}\r\n\r\nconst Button: React.FC<IProps> = ({ size, color, text, onClick }) => {\r\n  const classes = useStyles({\r\n    size,\r\n    color,\r\n  });\r\n  return (\r\n    <button className={classes.root} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles<Theme>((theme) => ({\r\n  root: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#1CA8F3\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#1CA8F3\",\r\n      },\r\n    },\r\n    \"& .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: \"#7A79A5\",\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n      color: \"#7A79A5\",\r\n      fontFamily: \"Roboto\",\r\n    },\r\n  },\r\n}));\r\n","//Core\r\nimport React from \"react\";\r\nimport { FormControl, OutlinedInput } from \"@material-ui/core\";\r\n//Styles\r\nimport { useStyles } from \"./styles\";\r\n\r\ninterface IProps {\r\n  placeholder: string;\r\n  value: string;\r\n  setValue: React.Dispatch<React.SetStateAction<string>>;\r\n  type?: string;\r\n}\r\n\r\nconst Input: React.FC<IProps> = ({ value, setValue, placeholder, type }) => {\r\n  const classes = useStyles();\r\n\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl className={classes.root} variant=\"outlined\">\r\n      <OutlinedInput\r\n        value={value}\r\n        onChange={changeHandler}\r\n        name=\"login\"\r\n        placeholder={placeholder}\r\n        type={type}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    overflow: \"visible\",\r\n    \"& .MuiButtonBase-root[aria-label='Next']\": {\r\n      backgroundColor: \"#7A79A5\",\r\n      opacity: 1,\r\n      width: 21,\r\n      height: 21,\r\n      top: 50,\r\n      right: -50,\r\n      \"& .MuiSvgIcon-root\": {\r\n        color: \"#333253\",\r\n      },\r\n    },\r\n    \"& .MuiButtonBase-root[aria-label='Previous']\": {\r\n      backgroundColor: \"#7A79A5\",\r\n      opacity: 1,\r\n      width: 21,\r\n      height: 21,\r\n      top: 50,\r\n      left: -50,\r\n      \"& .MuiSvgIcon-root\": {\r\n        color: \"#333253\",\r\n      },\r\n    },\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n","//Core\r\nimport React, { useMemo, useState } from \"react\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { Grid } from \"@material-ui/core\";\r\n//Custom\r\nimport { useWindowSize } from \"./../../../hooks/useWindowSize\";\r\n//Styles\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst chunkArray = (arr: any, size: number) => {\r\n  if (size === 1) {\r\n    return [...arr.map((item: any) => [item])];\r\n  }\r\n  const result = arr.reduce((acc: any, _: any, i: number) => {\r\n    return i % size ? acc : [...acc, arr.slice(i, i + size)];\r\n  }, []);\r\n  return result;\r\n};\r\n\r\nconst getSize = (size: number): 2 | 3 | 4 | 6 | 12 => {\r\n  switch (size) {\r\n    case 1:\r\n      return 12;\r\n    case 2:\r\n      return 6;\r\n    case 3:\r\n      return 4;\r\n    case 4:\r\n      return 3;\r\n    case 6:\r\n      return 2;\r\n    default:\r\n      return 12;\r\n  }\r\n};\r\n\r\ninterface IProps {\r\n  slides: any;\r\n  SlideComponent: any;\r\n  breakpoints: any;\r\n}\r\n\r\nconst CustomCarousel: React.FC<IProps> = ({\r\n  slides,\r\n  SlideComponent,\r\n  breakpoints,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [width] = useWindowSize();\r\n  const [key, setKey] = useState<number>(0);\r\n  const [start, setStart] = useState<number>(0);\r\n\r\n  const chunkedBanners = useMemo(() => {\r\n    let result = chunkArray(slides, 1);\r\n    for (let key in breakpoints) {\r\n      if (width > +key) result = chunkArray(slides, breakpoints[key]);\r\n    }\r\n    return result;\r\n  }, [breakpoints, slides, width]);\r\n\r\n  const getGridSize = useMemo(() => {\r\n    let result = getSize(1);\r\n    for (let key in breakpoints) {\r\n      if (width > +key) result = getSize(breakpoints[key]);\r\n    }\r\n    return result;\r\n  }, [breakpoints, width]);\r\n\r\n  return (\r\n    <div key={key}>\r\n      <Carousel\r\n        fullHeightHover={false}\r\n        className={classes.root}\r\n        indicators={false}\r\n        navButtonsAlwaysVisible\r\n        autoPlay={false}\r\n        startAt={start}\r\n        onChange={(index: number, active: number) => {\r\n          setKey((prev) => {\r\n            setStart(index);\r\n            return prev + 1;\r\n          });\r\n        }}\r\n      >\r\n        {chunkedBanners.map((slide: any) => (\r\n          <Grid\r\n            spacing={3}\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            container\r\n            key={Math.random()}\r\n          >\r\n            {slide.map((item: any) => (\r\n              <Grid\r\n                item\r\n                sm={getGridSize}\r\n                key={Math.random()}\r\n                className={classes.fullWidth}\r\n              >\r\n                <SlideComponent {...item} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomCarousel;\r\n","import { useState, useLayoutEffect, useRef } from \"react\";\r\n\r\nexport const useWindowSize = () => {\r\n  const [size, setSize] = useState([window.innerWidth, window.innerHeight]);\r\n  let timer = useRef<any>(null);\r\n\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n\r\n    timer.current = setTimeout(() => {\r\n      window.addEventListener(\"resize\", updateSize);\r\n      updateSize();\r\n    }, 200);\r\n\r\n    return () => {\r\n      clearTimeout(timer.current);\r\n      window.removeEventListener(\"resize\", updateSize);\r\n    };\r\n  }, []);\r\n\r\n  return size;\r\n};\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport interface StyleProps {\r\n  height: number;\r\n}\r\n\r\nexport const useStyles = makeStyles<Theme, StyleProps>((theme: Theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: (props) => props.height,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  spinner: {\r\n    color: \"#FF329D\",\r\n  },\r\n}));\r\n","//Core\r\nimport React from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n//Styles\r\nimport { useStyles } from \"./styles\";\r\n\r\ninterface IProps {\r\n  height: number;\r\n}\r\n\r\nconst PageProgress: React.FC<IProps> = ({ height }) => {\r\n  const classes = useStyles({ height });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress className={classes.spinner} />\r\n    </div>\r\n  );\r\n};\r\nexport default PageProgress;\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  wrapper: {\r\n    background: \"#FFFFFF\",\r\n    boxShadow: \"0px 4px 24px rgba(0, 0, 0, 0.08)\",\r\n    borderRadius: 20,\r\n    padding: \"32px 24px\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 20,\r\n    lineHeight: \"23px\",\r\n    color: \"#333253\",\r\n    marginBottom: 20,\r\n  },\r\n  text: {\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: 500,\r\n    fontSize: 17,\r\n    lineHeight: \"20px\",\r\n    color: \"#333253\",\r\n    marginBottom: 30,\r\n  },\r\n}));\r\n","//Core\r\nimport React from \"react\";\r\nimport {\r\n  Dialog as DailogUI,\r\n  DialogContent,\r\n  Grid,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n//Styles\r\nimport { useStyles } from \"./styles\";\r\nimport Button from \"../Button\";\r\n\r\ninterface IProps {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n  title?: string;\r\n  text?: string;\r\n  maxWidth?: \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\r\n  onClick: () => void;\r\n}\r\n\r\nconst Dialog: React.FC<IProps> = ({\r\n  title,\r\n  text,\r\n  open,\r\n  setOpen,\r\n  maxWidth = \"xs\",\r\n  onClick,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <DailogUI\r\n      open={open}\r\n      maxWidth={maxWidth}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n    >\r\n      <DialogContent className={classes.wrapper}>\r\n        {title && <div className={classes.title}>{title}</div>}\r\n        {text && <div className={classes.text}>{text}</div>}\r\n        <Grid container justify=\"flex-end\">\r\n          <Button\r\n            size=\"small\"\r\n            color=\"white\"\r\n            text=\"Нет\"\r\n            onClick={() => {\r\n              setOpen(false);\r\n            }}\r\n          />\r\n          <Box ml={1}>\r\n            <Button size=\"small\" color=\"blue\" text=\"Да\" onClick={onClick} />\r\n          </Box>\r\n        </Grid>\r\n      </DialogContent>\r\n    </DailogUI>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    \"& .MuiDialog-paper\": {\r\n      borderRadius: 20,\r\n    },\r\n  },\r\n  wrapper: {\r\n    background: \"#FFFFFF\",\r\n    boxShadow: \"0px 4px 24px rgba(0, 0, 0, 0.08)\",\r\n    padding: \"32px 24px\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 20,\r\n    lineHeight: \"23px\",\r\n    color: \"#333253\",\r\n    marginBottom: 20,\r\n  },\r\n  text: {\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: 500,\r\n    fontSize: 17,\r\n    lineHeight: \"20px\",\r\n    color: \"#333253\",\r\n    marginBottom: 30,\r\n  },\r\n}));\r\n","//Core\r\nimport React from \"react\";\r\nimport { Dialog as DailogUI, DialogContent, Grid } from \"@material-ui/core\";\r\nimport Linkify from \"react-linkify\";\r\n//Styles\r\nimport { useStyles } from \"./styles\";\r\nimport Button from \"../Button\";\r\n\r\ninterface IProps {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n  title?: string;\r\n  text?: string;\r\n  maxWidth?: \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\r\n}\r\n\r\nconst DialogInfo: React.FC<IProps> = ({\r\n  title,\r\n  text,\r\n  open,\r\n  setOpen,\r\n  maxWidth = \"xs\",\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <DailogUI\r\n      open={open}\r\n      maxWidth={maxWidth}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <DialogContent className={classes.wrapper}>\r\n        {title && <div className={classes.title}>{title}</div>}\r\n        {text && (\r\n          <div className={classes.text}>\r\n            <Linkify>{text}</Linkify>\r\n          </div>\r\n        )}\r\n        <Grid container justify=\"center\">\r\n          <Button\r\n            size=\"small\"\r\n            color=\"blue\"\r\n            text=\"Закрыть\"\r\n            onClick={() => setOpen(false)}\r\n          />\r\n        </Grid>\r\n      </DialogContent>\r\n    </DailogUI>\r\n  );\r\n};\r\n\r\nexport default DialogInfo;\r\n","import {\r\n  SET_LESSON_ANNOUNCES_LIST,\r\n  SET_LESSON_ANNOUNCES_LOADING,\r\n  SET_LESSON_ANNOUNCES_ERROR,\r\n} from \"./selectors\";\r\nimport { ILessonAnnounce } from \"./../../../interfaces/ILessonAnnounce\";\r\n\r\nexport interface IState {\r\n  list: ILessonAnnounce[] | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\ntype ActionType =\r\n  | {\r\n      type: typeof SET_LESSON_ANNOUNCES_LIST;\r\n      payload: IState[\"list\"];\r\n    }\r\n  | {\r\n      type: typeof SET_LESSON_ANNOUNCES_LOADING;\r\n      payload: IState[\"loading\"];\r\n    }\r\n  | {\r\n      type: typeof SET_LESSON_ANNOUNCES_ERROR;\r\n      payload: IState[\"error\"];\r\n    };\r\n\r\nconst initialState: IState = {\r\n  list: null,\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action: ActionType): IState => {\r\n  switch (action.type) {\r\n    case SET_LESSON_ANNOUNCES_LIST: {\r\n      return { ...state, list: action.payload };\r\n    }\r\n    case SET_LESSON_ANNOUNCES_LOADING: {\r\n      return { ...state, loading: action.payload };\r\n    }\r\n    case SET_LESSON_ANNOUNCES_ERROR: {\r\n      return { ...state, error: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","export const SET_LESSON_ANNOUNCES_LIST = \"SET_LESSON_ANNOUNCES_LIST\";\r\nexport const SET_LESSON_ANNOUNCES_LOADING = \"SET_LESSON_ANNOUNCES_LOADING\";\r\nexport const SET_LESSON_ANNOUNCES_ERROR = \"SET_LESSON_ANNOUNCES_ERROR\";\r\n","export const serverHost = \"http://tangonoches.famedev.ru\";\r\n\r\nexport interface IRequestError {\r\n  data: {\r\n    response: {\r\n      data: {\r\n        message: string;\r\n      };\r\n      status: number;\r\n    };\r\n  };\r\n}\r\n","//Core\r\nimport axios from \"axios\";\r\n//Custom\r\nimport { serverHost } from \"../index\";\r\nimport { ILessonAnnounce } from \"./../../interfaces/ILessonAnnounce\";\r\n\r\ninterface ILessonAnnounceResponse {\r\n  data: {\r\n    data: ILessonAnnounce[];\r\n  };\r\n}\r\n\r\nexport const getLessons = async () => {\r\n  const response: ILessonAnnounceResponse = await await axios.get(\r\n    `${serverHost}/api/student/lessonAnnounces`,\r\n    {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    }\r\n  );\r\n  return response.data.data;\r\n};\r\n","//Core\r\nimport { ThunkAction } from \"redux-thunk\";\r\n//Custom\r\nimport {\r\n  SET_LESSON_ANNOUNCES_LIST,\r\n  SET_LESSON_ANNOUNCES_LOADING,\r\n  SET_LESSON_ANNOUNCES_ERROR,\r\n} from \"./selectors\";\r\nimport { IState } from \"./reducer\";\r\nimport { getLessons } from \"./../../../externalAPI/announces/lessons\";\r\nimport { ILessonAnnounce } from \"./../../../interfaces/ILessonAnnounce\";\r\n\r\n//actions creators\r\nexport const setLessonAnnouncesList = (payload: IState[\"list\"]) => ({\r\n  type: SET_LESSON_ANNOUNCES_LIST,\r\n  payload,\r\n});\r\n\r\nexport const setLessonAnnouncesLoading = (payload: IState[\"loading\"]) => ({\r\n  type: SET_LESSON_ANNOUNCES_LOADING,\r\n  payload,\r\n});\r\n\r\nexport const setLessonAnnouncesError = (payload: IState[\"error\"]) => ({\r\n  type: SET_LESSON_ANNOUNCES_ERROR,\r\n  payload,\r\n});\r\n\r\n//thunk\r\nexport const getLessonAnnounces = (): ThunkAction<\r\n  void,\r\n  IState,\r\n  unknown,\r\n  any\r\n> => {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      dispatch(setLessonAnnouncesLoading(true));\r\n      const lessons: ILessonAnnounce[] = await getLessons();\r\n      dispatch(setLessonAnnouncesList(lessons));\r\n      dispatch(setLessonAnnouncesLoading(false));\r\n    } catch (error) {\r\n      alert(error.response.data.message);\r\n      dispatch(setLessonAnnouncesError(error.response.data.message));\r\n      dispatch(setLessonAnnouncesLoading(false));\r\n    }\r\n  };\r\n};\r\n","import {\r\n  SET_TICKETS_LIST,\r\n  SET_POINTS,\r\n  SET_TICKETS_LOADING,\r\n  SET_TICKETS_ERROR,\r\n} from \"./selectors\";\r\nimport { ITicket } from \"./../../../interfaces/ITicket\";\r\n\r\nexport interface IState {\r\n  list: ITicket[] | null;\r\n  points: number | 0;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\ntype ActionType =\r\n  | {\r\n      type: typeof SET_TICKETS_LIST;\r\n      payload: IState[\"list\"];\r\n    }\r\n  | {\r\n      type: typeof SET_POINTS;\r\n      payload: IState[\"points\"];\r\n    }\r\n  | {\r\n      type: typeof SET_TICKETS_LOADING;\r\n      payload: IState[\"loading\"];\r\n    }\r\n  | {\r\n      type: typeof SET_TICKETS_ERROR;\r\n      payload: IState[\"error\"];\r\n    };\r\n\r\nconst initialState: IState = {\r\n  list: null,\r\n  points: 0,\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action: ActionType): IState => {\r\n  switch (action.type) {\r\n    case SET_TICKETS_LIST: {\r\n      return { ...state, list: action.payload };\r\n    }\r\n    case SET_POINTS: {\r\n      return { ...state, points: action.payload };\r\n    }\r\n    case SET_TICKETS_LOADING: {\r\n      return { ...state, loading: action.payload };\r\n    }\r\n    case SET_TICKETS_ERROR: {\r\n      return { ...state, error: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","export const SET_TICKETS_LIST = \"SET_TICKETS_LIST\";\r\nexport const SET_POINTS = \"SET_POINTS\";\r\nexport const SET_TICKETS_LOADING = \"SET_TICKETS_LOADING\";\r\nexport const SET_TICKETS_ERROR = \"SET_TICKETS_ERROR\";\r\n","import axios from \"axios\";\r\nimport { serverHost } from \"../index\";\r\nimport { ITicket } from \"./../../interfaces/ITicket\";\r\n\r\ninterface IStudentInfoResponse {\r\n  data: {\r\n    tickets: ITicket[];\r\n    points: number;\r\n  };\r\n}\r\n\r\nexport const getStudentInfo = async () => {\r\n  const response: IStudentInfoResponse = await axios.get(\r\n    `${serverHost}/api/student/protected/info`,\r\n    {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    }\r\n  );\r\n\r\n  return response.data;\r\n};\r\n","//Core\r\nimport { ThunkAction } from \"redux-thunk\";\r\n//Custom\r\nimport {\r\n  SET_TICKETS_LIST,\r\n  SET_TICKETS_LOADING,\r\n  SET_TICKETS_ERROR,\r\n  SET_POINTS,\r\n} from \"./selectors\";\r\nimport { IState } from \"./reducer\";\r\nimport { getStudentInfo as _getStudentInfo } from \"./../../../externalAPI/studentInfo/index\";\r\n\r\n//actions creators\r\nexport const setTicketsList = (payload: IState[\"list\"]) => ({\r\n  type: SET_TICKETS_LIST,\r\n  payload,\r\n});\r\n\r\nexport const setPoints = (payload: IState[\"points\"]) => ({\r\n  type: SET_POINTS,\r\n  payload,\r\n});\r\n\r\nexport const setTicketsLoading = (payload: IState[\"loading\"]) => ({\r\n  type: SET_TICKETS_LOADING,\r\n  payload,\r\n});\r\n\r\nexport const setTicketsError = (payload: IState[\"error\"]) => ({\r\n  type: SET_TICKETS_ERROR,\r\n  payload,\r\n});\r\n\r\n//thunk\r\nexport const getStudentInfo = (): ThunkAction<void, IState, unknown, any> => {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      dispatch(setTicketsLoading(true));\r\n      const info = await _getStudentInfo();\r\n      dispatch(setTicketsList(info.tickets));\r\n      dispatch(setPoints(info.points));\r\n      dispatch(setTicketsLoading(false));\r\n    } catch (error) {\r\n      alert(error.response.data.message);\r\n      dispatch(setTicketsError(error.response.data.message));\r\n      dispatch(setTicketsLoading(false));\r\n    }\r\n  };\r\n};\r\n","import { SET_AUTH_INFO, SET_AUTH_LOADING, SET_AUTH_ERROR } from \"./selectors\";\r\n\r\nexport interface IState {\r\n  info: {\r\n    token: string;\r\n  } | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\ntype ActionType =\r\n  | {\r\n      type: typeof SET_AUTH_INFO;\r\n      payload: IState[\"info\"];\r\n    }\r\n  | {\r\n      type: typeof SET_AUTH_LOADING;\r\n      payload: IState[\"loading\"];\r\n    }\r\n  | {\r\n      type: typeof SET_AUTH_ERROR;\r\n      payload: IState[\"error\"];\r\n    };\r\n\r\nconst initialState: IState = {\r\n  info: {\r\n    token: localStorage.getItem(\"token\") || \"\",\r\n  },\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action: ActionType): IState => {\r\n  switch (action.type) {\r\n    case SET_AUTH_INFO: {\r\n      return { ...state, info: action.payload };\r\n    }\r\n    case SET_AUTH_LOADING: {\r\n      return { ...state, loading: action.payload };\r\n    }\r\n    case SET_AUTH_ERROR: {\r\n      return { ...state, error: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","export const SET_AUTH_INFO = \"SET_AUTH_INFO\";\r\nexport const SET_AUTH_LOADING = \"SET_AUTH_LOADING\";\r\nexport const SET_AUTH_ERROR = \"SET_AUTH_ERROR\";\r\n","import axios from \"axios\";\r\nimport { serverHost } from \"../index\";\r\n\r\nexport interface ILoginResponse {\r\n  data: {\r\n    api_token: string;\r\n  };\r\n}\r\n\r\nexport const login = async (bar_code: string, password: string) => {\r\n  const response: ILoginResponse = await axios.post(\r\n    `${serverHost}/api/student/login`,\r\n    { bar_code, password },\r\n    { headers: { \"Content-Type\": \"application/json\" } }\r\n  );\r\n  return response.data.api_token;\r\n};\r\n","//Core\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport axios from \"axios\";\r\n//Custom\r\nimport { login as _login } from \"./../../../externalAPI/auth/login\";\r\nimport { SET_AUTH_INFO, SET_AUTH_LOADING, SET_AUTH_ERROR } from \"./selectors\";\r\nimport { IState } from \"./reducer\";\r\n\r\n//actions creators\r\nexport const setAuthInfo = (payload: IState[\"info\"]) => ({\r\n  type: SET_AUTH_INFO,\r\n  payload,\r\n});\r\n\r\nexport const setAuthLoading = (payload: IState[\"loading\"]) => ({\r\n  type: SET_AUTH_LOADING,\r\n  payload,\r\n});\r\n\r\nexport const setAuthError = (payload: IState[\"error\"]) => ({\r\n  type: SET_AUTH_ERROR,\r\n  payload,\r\n});\r\n\r\n//thunk\r\nexport const login = (\r\n  login: string,\r\n  password: string\r\n): ThunkAction<void, IState, unknown, any> => {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      dispatch(setAuthLoading(true));\r\n      const token: string = await _login(login, password);\r\n      localStorage.setItem(\"token\", token);\r\n      axios.defaults.headers.common[\"Authorization\"] = token;\r\n      dispatch(setAuthInfo({ token }));\r\n      dispatch(setAuthLoading(false));\r\n    } catch (error) {\r\n      alert(\"Неверные логин или пароль !\");\r\n      dispatch(setAuthError(error.response.data.message));\r\n      dispatch(setAuthLoading(false));\r\n    }\r\n  };\r\n};\r\n","import {\r\n  SET_EVENT_ANNOUNCES_LIST,\r\n  SET_EVENT_ANNOUNCES_LOADING,\r\n  SET_EVENT_ANNOUNCES_ERROR,\r\n} from \"./selectors\";\r\nimport { IEventAnnounce } from \"./../../../interfaces/IEventAnnounce\";\r\n\r\nexport interface IState {\r\n  list: IEventAnnounce[] | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\ntype ActionType =\r\n  | {\r\n      type: typeof SET_EVENT_ANNOUNCES_LIST;\r\n      payload: IState[\"list\"];\r\n    }\r\n  | {\r\n      type: typeof SET_EVENT_ANNOUNCES_LOADING;\r\n      payload: IState[\"loading\"];\r\n    }\r\n  | {\r\n      type: typeof SET_EVENT_ANNOUNCES_ERROR;\r\n      payload: IState[\"error\"];\r\n    };\r\n\r\nconst initialState: IState = {\r\n  list: null,\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action: ActionType): IState => {\r\n  switch (action.type) {\r\n    case SET_EVENT_ANNOUNCES_LIST: {\r\n      return { ...state, list: action.payload };\r\n    }\r\n    case SET_EVENT_ANNOUNCES_LOADING: {\r\n      return { ...state, loading: action.payload };\r\n    }\r\n    case SET_EVENT_ANNOUNCES_ERROR: {\r\n      return { ...state, error: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","export const SET_EVENT_ANNOUNCES_LIST = \"SET_EVENT_ANNOUNCES_LIST\";\r\nexport const SET_EVENT_ANNOUNCES_LOADING = \"SET_EVENT_ANNOUNCES_LOADING\";\r\nexport const SET_EVENT_ANNOUNCES_ERROR = \"SET_EVENT_ANNOUNCES_ERROR\";\r\n","//Core\r\nimport axios from \"axios\";\r\n//Custom\r\nimport { serverHost } from \"../index\";\r\nimport { IEventAnnounce } from \"./../../interfaces/IEventAnnounce\";\r\n\r\ninterface IEventAnnounceResponse {\r\n  data: {\r\n    data: IEventAnnounce[];\r\n  };\r\n}\r\n\r\nexport const getEvents = async () => {\r\n  const response: IEventAnnounceResponse = await axios.get(\r\n    `${serverHost}/api/student/eventAnnounces`,\r\n    {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    }\r\n  );\r\n  return response.data.data;\r\n};\r\n","//Core\r\nimport { ThunkAction } from \"redux-thunk\";\r\n//Custom\r\nimport {\r\n  SET_EVENT_ANNOUNCES_LIST,\r\n  SET_EVENT_ANNOUNCES_LOADING,\r\n  SET_EVENT_ANNOUNCES_ERROR,\r\n} from \"./selectors\";\r\nimport { IState } from \"./reducer\";\r\nimport { getEvents } from \"./../../../externalAPI/announces/events\";\r\nimport { IEventAnnounce } from \"./../../../interfaces/IEventAnnounce\";\r\n\r\n//actions creators\r\nexport const setEventAnnouncesList = (payload: IState[\"list\"]) => ({\r\n  type: SET_EVENT_ANNOUNCES_LIST,\r\n  payload,\r\n});\r\n\r\nexport const setEventAnnouncesLoading = (payload: IState[\"loading\"]) => ({\r\n  type: SET_EVENT_ANNOUNCES_LOADING,\r\n  payload,\r\n});\r\n\r\nexport const setEventAnnouncesError = (payload: IState[\"error\"]) => ({\r\n  type: SET_EVENT_ANNOUNCES_ERROR,\r\n  payload,\r\n});\r\n\r\n//thunk\r\nexport const getEventAnnounces = (): ThunkAction<\r\n  void,\r\n  IState,\r\n  unknown,\r\n  any\r\n> => {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      dispatch(setEventAnnouncesLoading(true));\r\n      const events: IEventAnnounce[] = await getEvents();\r\n      dispatch(setEventAnnouncesList(events));\r\n      dispatch(setEventAnnouncesLoading(false));\r\n    } catch (error) {\r\n      alert(error.response.data.message);\r\n      dispatch(setEventAnnouncesError(error.response.data.message));\r\n      dispatch(setEventAnnouncesLoading(false));\r\n    }\r\n  };\r\n};\r\n","//Core\r\nimport { combineReducers } from \"redux\";\r\nimport { useSelector as _useSelector, TypedUseSelectorHook } from \"react-redux\";\r\n//Custom\r\nimport studentInfo from \"./studentInfo\";\r\nimport auth from \"./auth\";\r\nimport lessonAnnounces from \"./lessonAnnounces\";\r\nimport eventAnnounces from \"./eventAnnounces\";\r\n\r\nconst rootReducer = combineReducers({\r\n  studentInfo,\r\n  auth,\r\n  lessonAnnounces,\r\n  eventAnnounces,\r\n});\r\nexport default rootReducer;\r\n\r\ntype RootState = ReturnType<typeof rootReducer>;\r\nexport const useSelector: TypedUseSelectorHook<RootState> = _useSelector;\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  wrapper: {\r\n    background: \"linear-gradient(180deg, #8A51F9 0%, #6139B2 100%)\",\r\n    boxShadow: \"0px 4px 24px rgba(0, 0, 0, 0.08)\",\r\n    borderRadius: 20,\r\n    padding: 24,\r\n    position: \"relative\",\r\n  },\r\n  extraInfoButton: {\r\n    position: \"absolute\",\r\n    top: 10,\r\n    right: 10,\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  date: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 14,\r\n    lineHeight: \"16px\",\r\n    color: \"white\",\r\n    marginBottom: 11,\r\n  },\r\n  time: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 14,\r\n    lineHeight: \"16px\",\r\n    fontWeight: 500,\r\n    color: \"white\",\r\n    background: \"#FF329D\",\r\n    borderRadius: 6,\r\n    textAlign: \"center\",\r\n    marginBottom: 16,\r\n    width: 83,\r\n    padding: 4,\r\n  },\r\n  title: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 17,\r\n    lineHeight: \"20px\",\r\n    fontWeight: 500,\r\n    color: \"white\",\r\n    height: 80,\r\n    marginBottom: 10,\r\n  },\r\n  address: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 14,\r\n    lineHeight: \"16px\",\r\n    color: \"white\",\r\n    paddingLeft: 9,\r\n  },\r\n}));\r\n","//Core\r\nimport React, { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { format } from \"date-fns\";\r\nimport { ru } from \"date-fns/locale\";\r\n//Interfaces\r\nimport { ILessonAnnounce } from \"./../../../../interfaces/ILessonAnnounce\";\r\n//UI\r\nimport { DialogInfo } from \"../../../ui\";\r\n//Styles\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst getTime = (start: string, finish: string): string => {\r\n  const startArray: string[] = start.split(\" \");\r\n  const finishArray: string[] = finish.split(\" \");\r\n  const result: string = `${startArray[1].substring(\r\n    0,\r\n    5\r\n  )} - ${finishArray[1].substring(0, 5)}`;\r\n  return result;\r\n};\r\n\r\nconst getDate = (date: string): string => {\r\n  const dateString: string = format(new Date(date), \"dd.MM\");\r\n  const weekDay: string = format(new Date(date), \"EEEE\", { locale: ru });\r\n  return `${weekDay.charAt(0).toUpperCase()}${weekDay.substring(\r\n    1\r\n  )} ${dateString}`;\r\n};\r\n\r\ninterface IProps extends ILessonAnnounce {}\r\n\r\nconst Slide: React.FC<IProps> = ({\r\n  name,\r\n  address,\r\n  start_date,\r\n  end_date,\r\n  extra_info,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [openDialog, setOpenDialog] = useState<boolean>(false);\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {extra_info && (\r\n        <img\r\n          src=\"/images/common/question.svg\"\r\n          className={classes.extraInfoButton}\r\n          alt=\"info\"\r\n          onClick={() => setOpenDialog(true)}\r\n        />\r\n      )}\r\n      <div className={classes.date}>{getDate(start_date)}</div>\r\n      <div className={classes.time}>{getTime(start_date, end_date)}</div>\r\n      <div className={classes.title}>{name}</div>\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item>\r\n          <img src=\"/images/announces/compass.svg\" alt=\"img\" />\r\n        </Grid>\r\n        <Grid item>\r\n          <div className={classes.address}>{address}</div>\r\n        </Grid>\r\n      </Grid>\r\n      <DialogInfo\r\n        title=\"Информация\"\r\n        text={extra_info || \"\"}\r\n        open={openDialog}\r\n        setOpen={setOpenDialog}\r\n        maxWidth=\"sm\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slide;\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  noEventsWrapper: {\r\n    background: \"#37365b\",\r\n    borderRadius: 20,\r\n    paddingTop: 60,\r\n    paddingBottom: 60,\r\n  },\r\n  noEventsText: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 17,\r\n    lineHeight: \"20px\",\r\n    color: \"#7877a3\",\r\n    marginTop: 30,\r\n  },\r\n}));\r\n","//Core\r\nimport React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n//Styles\r\nimport { useStyles } from \"./styles\";\r\n\r\ninterface IProps {\r\n  text: string;\r\n}\r\n\r\nconst NotAnnounces: React.FC<IProps> = ({ text }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      className={classes.noEventsWrapper}\r\n    >\r\n      <Grid item sm={12}>\r\n        <img src=\"/images/announces/not.svg\" alt=\"img\" />\r\n      </Grid>\r\n      <Grid item sm={12} className={classes.noEventsText}>\r\n        {text}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NotAnnounces;\r\n","//Core\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n//Custom\r\nimport { Carousel, PageProgress } from \"../../ui\";\r\nimport { getLessonAnnounces } from \"../../../store/modules/lessonAnnounces\";\r\nimport { useSelector } from \"../../../store/modules/rootReducer\";\r\nimport Slide from \"./Slide\";\r\nimport NotAnnounces from \"./../notAnnounces/NotAnnounces\";\r\n\r\nconst carouselBreakpoints = {\r\n  0: 1,\r\n  786: 3,\r\n  1100: 4,\r\n};\r\n\r\nconst Lessons: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { list, loading } = useSelector((state) => state.lessonAnnounces);\r\n\r\n  useEffect(() => {\r\n    dispatch(getLessonAnnounces());\r\n  }, [dispatch]);\r\n\r\n  if (loading) return <PageProgress height={80} />;\r\n  if (!list || !list.length)\r\n    return <NotAnnounces text=\"Ближайших уроков нет\" />;\r\n\r\n  return (\r\n    <Carousel\r\n      slides={list}\r\n      SlideComponent={Slide}\r\n      breakpoints={carouselBreakpoints}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Lessons;\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\ninterface StyleProps {\r\n  backgroundImage: string;\r\n}\r\n\r\nexport const useStyles = makeStyles<Theme, StyleProps>((theme) => ({\r\n  wrapper: {\r\n    backgroundImage: (props) => props.backgroundImage,\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    boxShadow: \"0px 4px 24px rgba(0, 0, 0, 0.08)\",\r\n    borderRadius: 20,\r\n    padding: 24,\r\n    position: \"relative\",\r\n  },\r\n  extraInfoButton: {\r\n    position: \"absolute\",\r\n    top: 10,\r\n    right: 10,\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  date: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 14,\r\n    lineHeight: \"16px\",\r\n    color: \"white\",\r\n    marginTop: 80,\r\n    marginBottom: 11,\r\n  },\r\n  title: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 17,\r\n    lineHeight: \"20px\",\r\n    fontWeight: 500,\r\n    color: \"white\",\r\n    height: 60,\r\n    marginBottom: 10,\r\n  },\r\n  address: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 14,\r\n    lineHeight: \"16px\",\r\n    color: \"white\",\r\n    paddingLeft: 9,\r\n  },\r\n}));\r\n","//Core\r\nimport React, { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { format } from \"date-fns\";\r\nimport { ru } from \"date-fns/locale\";\r\n//UI\r\nimport { DialogInfo } from \"../../../ui\";\r\n//Interfaces\r\nimport { IEventAnnounce } from \"./../../../../interfaces/IEventAnnounce\";\r\n//Styles\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst getFormattedDate = (start: string, end: string) => {\r\n  const startArray: string[] = start.split(\" \");\r\n  const finishArray: string[] = end.split(\" \");\r\n  const day = format(new Date(start), \"d MMMM\", { locale: ru });\r\n  return `${day} ${startArray[1].substring(0, 5)} - ${finishArray[1].substring(\r\n    0,\r\n    5\r\n  )}`;\r\n};\r\n\r\ninterface IProps extends IEventAnnounce {}\r\n\r\nconst Slide: React.FC<IProps> = ({\r\n  name,\r\n  start_date,\r\n  end_date,\r\n  address,\r\n  image,\r\n  extra_info,\r\n}) => {\r\n  const classes = useStyles({\r\n    backgroundImage: `linear-gradient(to top, #423BEB 0%, #6A57F4 30%, #5347EF 50%, rgba(105, 80, 248, 0) 100%), url(${image})`,\r\n  });\r\n  const [openDialog, setOpenDialog] = useState<boolean>(false);\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {extra_info && (\r\n        <img\r\n          src=\"/images/common/question.svg\"\r\n          className={classes.extraInfoButton}\r\n          alt=\"info\"\r\n          onClick={() => setOpenDialog(true)}\r\n        />\r\n      )}\r\n      <div className={classes.date}>\r\n        {getFormattedDate(start_date, end_date)}\r\n      </div>\r\n      <div className={classes.title}>{name}</div>\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item>\r\n          <img src=\"/images/announces/compass.svg\" alt=\"img\" />\r\n        </Grid>\r\n        <Grid item>\r\n          <div className={classes.address}>{address}</div>\r\n        </Grid>\r\n      </Grid>\r\n      <DialogInfo\r\n        title=\"Информация\"\r\n        text={extra_info || \"\"}\r\n        open={openDialog}\r\n        setOpen={setOpenDialog}\r\n        maxWidth=\"sm\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slide;\r\n","//Core\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n//Custom\r\nimport { Carousel, PageProgress } from \"../../ui\";\r\nimport { useSelector } from \"../../../store/modules/rootReducer\";\r\nimport Slide from \"./Slide\";\r\nimport { getEventAnnounces } from \"../../../store/modules/eventAnnounces\";\r\nimport NotAnnounces from \"./../notAnnounces/NotAnnounces\";\r\n\r\nconst carouselBreakpoints = {\r\n  0: 1,\r\n  786: 3,\r\n  1100: 4,\r\n};\r\n\r\nconst Events: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { list, loading } = useSelector((state) => state.eventAnnounces);\r\n\r\n  useEffect(() => {\r\n    dispatch(getEventAnnounces());\r\n  }, [dispatch]);\r\n\r\n  if (loading) return <PageProgress height={80} />;\r\n  if (!list || !list.length)\r\n    return <NotAnnounces text=\"Ближайших мероприятий нет\" />;\r\n\r\n  return (\r\n    <Carousel\r\n      slides={list}\r\n      SlideComponent={Slide}\r\n      breakpoints={carouselBreakpoints}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Events;\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  title: {\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    lineHeight: \"23px\",\r\n    marginTop: 35,\r\n    color: \"white\",\r\n    marginBottom: 20,\r\n  },\r\n  footer: {\r\n    height: 60,\r\n  },\r\n}));\r\n","//Core\r\nimport React from \"react\";\r\n//Custom\r\nimport Lessons from \"./../../components/announces/lessons/Lessons\";\r\nimport Events from \"./../../components/announces/events/Events\";\r\n//Styles\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst Main: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className={classes.title}>Расписание уроков</div>\r\n      <Lessons />\r\n      <div className={classes.title}>Расписание мероприятий</div>\r\n      <Events />\r\n      <div className={classes.footer}></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    paddingTop: 33,\r\n    paddingBottom: 25,\r\n  },\r\n}));\r\n","//Core\r\nimport React, { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\n//Custom\r\nimport { Button, Dialog } from \"../../ui\";\r\nimport { useSelector } from \"../../../store/modules/rootReducer\";\r\nimport { setAuthInfo } from \"../../../store/modules/auth\";\r\n//Styles\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const dialogHandler = (): void => {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n    localStorage.clear();\r\n    setOpenDialog(false);\r\n    dispatch(setAuthInfo(null));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        justify=\"space-between\"\r\n        className={classes.container}\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={6}>\r\n          <img src=\"/images/header/logo.svg\" alt=\"logo\" />\r\n        </Grid>\r\n        <Grid container justify=\"flex-end\" item xs={6}>\r\n          {auth?.info?.token && (\r\n            <Button\r\n              text=\"Выйти\"\r\n              size=\"small\"\r\n              color=\"dark\"\r\n              onClick={() => {\r\n                setOpenDialog(true);\r\n              }}\r\n            />\r\n          )}\r\n        </Grid>\r\n        <Dialog\r\n          title=\"Внимание !\"\r\n          text=\"Вы уверены что хотите выйти из аккаунта ?\"\r\n          open={openDialog}\r\n          setOpen={setOpenDialog}\r\n          onClick={dialogHandler}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    padding: 24,\r\n    background: \"#37365b\",\r\n    borderRadius: 20,\r\n  },\r\n  title: {\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: 500,\r\n    fontSize: 18,\r\n    lineHeight: \"21px\",\r\n    color: \"white\",\r\n    marginBottom: 24,\r\n  },\r\n  info: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 14,\r\n    lineHeight: \"16px\",\r\n    color: \"#7A79A5\",\r\n    marginTop: 24,\r\n  },\r\n  img: {\r\n    maxWidth: 152,\r\n  },\r\n}));\r\n","//Core\r\nimport React, { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\n//Custom\r\nimport { Input, Button, PageProgress } from \"../../../components/ui\";\r\nimport { login as _login } from \"../../../store/modules/auth\";\r\nimport { useSelector } from \"../../../store/modules/rootReducer\";\r\n//Styles\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst Auth: React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.auth);\r\n  const [login, setLogin] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const loginHandler = (): void => {\r\n    dispatch(_login(login, password));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.title}>Авторизация</div>\r\n      {loading ? (\r\n        <PageProgress height={60} />\r\n      ) : (\r\n        <>\r\n          <Grid container justify=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n            <Grid item md={3} sm={12}>\r\n              <Input value={login} setValue={setLogin} placeholder=\"Код(ID)\" />\r\n            </Grid>\r\n            <Grid item md={3} sm={12}>\r\n              <Input\r\n                value={password}\r\n                setValue={setPassword}\r\n                placeholder=\"Пароль\"\r\n                type=\"password\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={3} sm={12}>\r\n              <Button\r\n                text=\"Войти\"\r\n                color=\"blue\"\r\n                size=\"medium\"\r\n                onClick={loginHandler}\r\n              />\r\n            </Grid>\r\n            <Grid item md={3} sm={12}>\r\n              <img\r\n                src=\"/images/auth/Tangonoches.svg\"\r\n                alt=\"tango\"\r\n                className={classes.img}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n      <div className={classes.info}>\r\n        Для входа введите код (ID) и пароль которые были вам присвоен при\r\n        регистрации\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport interface StyleProps {\r\n  color: string;\r\n}\r\n\r\nexport const useStyles = makeStyles<Theme, StyleProps>((theme) => ({\r\n  wrapper: {\r\n    padding: 35,\r\n    background: (props) => props.color,\r\n    borderRadius: 20,\r\n    position: \"relative\",\r\n  },\r\n  upDot: {\r\n    backgroundColor: \"#333253\",\r\n    position: \"absolute\",\r\n    top: -12,\r\n    left: \"60%\",\r\n    width: 25,\r\n    height: 25,\r\n    borderRadius: \"50%\",\r\n  },\r\n  downDot: {\r\n    backgroundColor: \"#333253\",\r\n    position: \"absolute\",\r\n    bottom: -12,\r\n    left: \"60%\",\r\n    width: 25,\r\n    height: 25,\r\n    borderRadius: \"50%\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    lineHeight: \"23px\",\r\n    color: \"white\",\r\n    marginBottom: 21,\r\n  },\r\n  info: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 14,\r\n    lineHeight: \"16px\",\r\n    color: \"white\",\r\n    marginBottom: 12,\r\n  },\r\n  date: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 17,\r\n    fontWeight: 500,\r\n    lineHeight: \"20px\",\r\n    color: \"white\",\r\n  },\r\n  lessonsLeft: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 48,\r\n    fontWeight: \"bold\",\r\n    lineHeight: \"56px\",\r\n    color: \"white\",\r\n  },\r\n  lessonsCount: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 40,\r\n    fontWeight: \"bold\",\r\n    lineHeight: \"47px\",\r\n    color: \"white\",\r\n    opacity: 0.5,\r\n  },\r\n}));\r\n","//Core\r\nimport React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { format, parseISO } from \"date-fns\";\r\n//Styles\r\nimport { useStyles } from \"./styles\";\r\nimport { ITicket } from \"./../../../interfaces/ITicket\";\r\n\r\nconst getColor = (color: number): string => {\r\n  return color === 0 || color === 1\r\n    ? \"linear-gradient(180deg, #F57A11 0%, #E72121 100%);\"\r\n    : color === 2 || color === 3\r\n    ? \"linear-gradient(180deg, #F5BF06 0%, #F48809 100%);\"\r\n    : \"linear-gradient(180deg, #68C126 0%, #1E950E 100%)\";\r\n};\r\n\r\ninterface IProps extends ITicket {}\r\n\r\nconst Slide: React.FC<IProps> = ({\r\n  type: { name },\r\n  ticket: {\r\n    ticket_end_date,\r\n    ticketCount: { lessons_count },\r\n  },\r\n  lessons_left,\r\n}) => {\r\n  const color = getColor(lessons_left);\r\n  const classes = useStyles({ color });\r\n\r\n  return (\r\n    <Grid container className={classes.wrapper}>\r\n      <Grid item sm={7}>\r\n        <div className={classes.title}>{name}</div>\r\n        <div className={classes.info}>Срок действия</div>\r\n        <div className={classes.date}>\r\n          {format(parseISO(ticket_end_date), \"dd.MM.yyyy\")}\r\n        </div>\r\n      </Grid>\r\n      <Grid container justify=\"flex-end\" alignItems=\"center\" item sm={5}>\r\n        <div>\r\n          <span className={classes.lessonsLeft}>{lessons_left}</span>\r\n          <span className={classes.lessonsCount}>{` / ${lessons_count}`}</span>\r\n        </div>\r\n      </Grid>\r\n      <div className={classes.upDot}></div>\r\n      <div className={classes.downDot}></div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Slide;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n  wrapper: {\r\n    padding: 35,\r\n    background: \"linear-gradient(180deg, #6a6abe 0%, #45457c 100%)\",\r\n    borderRadius: 20,\r\n  },\r\n  label: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 14,\r\n    lineHeight: \"16px\",\r\n    color: \"white\",\r\n    marginBottom: 12,\r\n  },\r\n  value: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 20,\r\n    fontWeight: 500,\r\n    lineHeight: \"20px\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n","//Core\r\nimport React from \"react\";\r\n//Styles\r\nimport { useStyles } from \"./styles\";\r\n\r\ninterface IProps {\r\n  count: number;\r\n}\r\n\r\nconst Points: React.FC<IProps> = ({ count }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <div className={classes.label}>У вас есть</div>\r\n      <div className={classes.value}>{count} баллов</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Points;\r\n","//Core\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Box } from \"@material-ui/core\";\r\n//UI\r\nimport { Carousel, PageProgress } from \"../ui\";\r\nimport Slide from \"./Slide\";\r\nimport Points from \"./Points/Points\";\r\n//Store\r\nimport { useSelector } from \"../../store/modules/rootReducer\";\r\nimport { getStudentInfo } from \"../../store/modules/studentInfo\";\r\n\r\nconst carouselBreakpoints = {\r\n  0: 1,\r\n  786: 2,\r\n  1530: 3,\r\n};\r\n\r\nconst Tickets: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { list, points, loading } = useSelector((state) => state.studentInfo);\r\n\r\n  useEffect(() => {\r\n    dispatch(getStudentInfo());\r\n  }, [dispatch]);\r\n\r\n  if (loading) return <PageProgress height={160} />;\r\n  if (!list || !list.length) return null;\r\n\r\n  return (\r\n    <>\r\n      <Carousel\r\n        slides={list}\r\n        SlideComponent={Slide}\r\n        breakpoints={carouselBreakpoints}\r\n      />\r\n      {points > 0 && (\r\n        <Box mb=\"30px\" mt=\"30px\">\r\n          <Points count={points} />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tickets;\r\n","//Core\r\nimport React from \"react\";\r\nimport { Redirect, Switch, Route } from \"react-router-dom\";\r\nimport { Grid } from \"@material-ui/core\";\r\n//Custom\r\nimport Main from \"./main\";\r\nimport Header from \"../components/navigation/header\";\r\nimport AuthForm from \"../components/auth/form\";\r\nimport Tickets from \"../components/tickets\";\r\nimport { useSelector } from \"../store/modules/rootReducer\";\r\n\r\nconst App: React.FC = () => {\r\n  const { info } = useSelector((state) => state.auth);\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item xs={9}>\r\n        <Header />\r\n        {info?.token ? <Tickets /> : <AuthForm />}\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <Main />\r\n          </Route>\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","//Core\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport axios from \"axios\";\n//Custom\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./pages\";\nimport { configureStore } from \"./store\";\n//Styles\nimport \"./styles/index.css\";\n\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"token\");\n\nconst store = configureStore();\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","//Core\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n//Custom\r\nimport reducers from \"./modules/rootReducer\";\r\n\r\nexport const configureStore = () => {\r\n  const store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n  return store;\r\n};\r\n"],"sourceRoot":""}